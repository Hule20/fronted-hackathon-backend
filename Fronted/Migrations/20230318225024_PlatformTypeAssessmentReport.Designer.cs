// <auto-generated />
using System;
using Fronted.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fronted.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230318225024_PlatformTypeAssessmentReport")]
    partial class PlatformTypeAssessmentReport
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Fronted.Models.AssessmentReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MalwareCount")
                        .HasColumnType("int");

                    b.Property<int?>("PlatformTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PulseCount")
                        .HasColumnType("int");

                    b.Property<string>("ThreatType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlatformTypeId");

                    b.ToTable("AssessmentReports");
                });

            modelBuilder.Entity("Fronted.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ipv4Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MacAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatingSystem")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Fronted.Models.MaliciousEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssessmentReportId")
                        .HasColumnType("int");

                    b.Property<int>("DeviceId")
                        .HasColumnType("int");

                    b.Property<string>("OriginIp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlatformTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ThreatLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlVisited")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VisitedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("Id");

                    b.HasIndex("AssessmentReportId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("PlatformTypeId");

                    b.ToTable("MaliciousEvents");
                });

            modelBuilder.Entity("Fronted.Models.PlatformType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlatformTypes");
                });

            modelBuilder.Entity("Fronted.Models.AssessmentReport", b =>
                {
                    b.HasOne("Fronted.Models.PlatformType", "PlatformType")
                        .WithMany()
                        .HasForeignKey("PlatformTypeId");

                    b.Navigation("PlatformType");
                });

            modelBuilder.Entity("Fronted.Models.MaliciousEvent", b =>
                {
                    b.HasOne("Fronted.Models.AssessmentReport", "AssessmentReport")
                        .WithMany()
                        .HasForeignKey("AssessmentReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fronted.Models.Device", "Device")
                        .WithMany("MaliciousEvents")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fronted.Models.PlatformType", null)
                        .WithMany("MaliciousEvents")
                        .HasForeignKey("PlatformTypeId");

                    b.Navigation("AssessmentReport");

                    b.Navigation("Device");
                });

            modelBuilder.Entity("Fronted.Models.Device", b =>
                {
                    b.Navigation("MaliciousEvents");
                });

            modelBuilder.Entity("Fronted.Models.PlatformType", b =>
                {
                    b.Navigation("MaliciousEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
